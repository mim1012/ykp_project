<?php

namespace App\Filament\Resources;

use App\Filament\Resources\StoreResource\Pages;
use App\Models\Store;
use App\Models\Branch;
use App\Models\User;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Filament\Forms\Components\Section;
use Filament\Tables\Columns\BadgeColumn;
use Filament\Tables\Actions\Action;
use Filament\Notifications\Notification;
use Illuminate\Support\Facades\Hash;

class StoreResource extends Resource
{
    protected static ?string $model = Store::class;
    
    protected static ?string $modelLabel = '매장';
    protected static ?string $pluralModelLabel = '매장 관리';
    protected static ?string $navigationLabel = '매장 관리';
    protected static ?string $navigationIcon = null;
    protected static ?int $navigationSort = 2;

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Section::make('매장 기본 정보')
                    ->description('새 매장의 기본 정보를 입력하세요')
                    ->schema([
                        Forms\Components\Select::make('branch_id')
                            ->label('소속 지사')
                            ->options(Branch::all()->pluck('name', 'id'))
                            ->required()
                            ->searchable()
                            ->preload(),
                            
                        Forms\Components\TextInput::make('name')
                            ->label('매장명')
                            ->required()
                            ->maxLength(255)
                            ->placeholder('예: 강남점, 홍대점'),
                            
                        Forms\Components\TextInput::make('code')
                            ->label('매장 코드')
                            ->required()
                            ->unique(Store::class, 'code', ignoreRecord: true)
                            ->maxLength(20)
                            ->placeholder('예: BR001-001, BR002-003')
                            ->helperText('지사코드-매장번호 형식으로 입력'),
                            
                        Forms\Components\Textarea::make('address')
                            ->label('매장 주소')
                            ->rows(2)
                            ->placeholder('서울시 강남구 테헤란로 123'),
                            
                        Forms\Components\TextInput::make('phone')
                            ->label('전화번호')
                            ->tel()
                            ->placeholder('02-1234-5678'),
                            
                        Forms\Components\Select::make('status')
                            ->label('운영 상태')
                            ->options([
                                'active' => '운영중',
                                'inactive' => '휴업',
                                'closed' => '폐업'
                            ])
                            ->default('active')
                            ->required(),
                    ])->columns(2),
                    
                Section::make('매장장 계정 생성')
                    ->description('매장장 계정을 동시에 생성할 수 있습니다 (선택사항)')
                    ->schema([
                        Forms\Components\Checkbox::make('create_manager_account')
                            ->label('매장장 계정 생성')
                            ->reactive(),
                            
                        Forms\Components\TextInput::make('manager_name')
                            ->label('매장장 이름')
                            ->maxLength(255)
                            ->visible(fn (Forms\Get $get) => $get('create_manager_account'))
                            ->required(fn (Forms\Get $get) => $get('create_manager_account')),
                            
                        Forms\Components\TextInput::make('manager_email')
                            ->label('매장장 이메일')
                            ->email()
                            ->unique(User::class, 'email')
                            ->visible(fn (Forms\Get $get) => $get('create_manager_account'))
                            ->required(fn (Forms\Get $get) => $get('create_manager_account'))
                            ->placeholder('manager@store.com'),
                            
                        Forms\Components\TextInput::make('manager_password')
                            ->label('매장장 비밀번호')
                            ->password()
                            ->minLength(8)
                            ->visible(fn (Forms\Get $get) => $get('create_manager_account'))
                            ->required(fn (Forms\Get $get) => $get('create_manager_account'))
                            ->helperText('최소 8자 이상'),
                    ])->columns(2),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('code')
                    ->label('매장코드')
                    ->searchable()
                    ->sortable()
                    ->copyable(),
                    
                Tables\Columns\TextColumn::make('name')
                    ->label('매장명')
                    ->searchable()
                    ->sortable()
                    ->weight('semibold'),
                    
                Tables\Columns\TextColumn::make('branch.name')
                    ->label('소속지사')
                    ->sortable()
                    ->badge()
                    ->color('info'),
                    
                Tables\Columns\TextColumn::make('address')
                    ->label('주소')
                    ->limit(30)
                    ->tooltip(function (Tables\Columns\TextColumn $column): ?string {
                        $state = $column->getState();
                        return strlen($state) > 30 ? $state : null;
                    }),
                    
                Tables\Columns\TextColumn::make('phone')
                    ->label('전화번호')
                    ->copyable(),
                    
                BadgeColumn::make('status')
                    ->label('상태')
                    ->colors([
                        'success' => 'active',
                        'warning' => 'inactive', 
                        'danger' => 'closed',
                    ])
                    ->formatStateUsing(fn (string $state): string => match ($state) {
                        'active' => '운영중',
                        'inactive' => '휴업',
                        'closed' => '폐업',
                        default => $state,
                    }),
                    
                Tables\Columns\TextColumn::make('users_count')
                    ->label('직원 수')
                    ->counts('users')
                    ->badge()
                    ->color('primary'),
                    
                Tables\Columns\TextColumn::make('created_at')
                    ->label('등록일')
                    ->dateTime('Y-m-d')
                    ->sortable()
                    ->toggleable(isToggledHiddenByDefault: true),
            ])
            ->filters([
                Tables\Filters\SelectFilter::make('branch_id')
                    ->label('지사')
                    ->relationship('branch', 'name'),
                    
                Tables\Filters\SelectFilter::make('status')
                    ->label('상태')
                    ->options([
                        'active' => '운영중',
                        'inactive' => '휴업',
                        'closed' => '폐업'
                    ]),
            ])
            ->actions([
                Tables\Actions\ViewAction::make(),
                Tables\Actions\EditAction::make(),
                
                Action::make('create_user')
                    ->label('직원 추가')
                    ->icon('heroicon-o-user-plus')
                    ->color('success')
                    ->form([
                        Forms\Components\TextInput::make('name')
                            ->label('직원 이름')
                            ->required(),
                        Forms\Components\TextInput::make('email')
                            ->label('이메일')
                            ->email()
                            ->required()
                            ->unique(User::class, 'email'),
                        Forms\Components\TextInput::make('password')
                            ->label('비밀번호')
                            ->password()
                            ->required()
                            ->minLength(8),
                        Forms\Components\Select::make('role')
                            ->label('역할')
                            ->options([
                                'store' => '매장 직원',
                                'branch' => '매장장 (지사 권한)',
                            ])
                            ->default('store')
                            ->required(),
                    ])
                    ->action(function (Store $record, array $data) {
                        User::create([
                            'name' => $data['name'],
                            'email' => $data['email'],
                            'password' => Hash::make($data['password']),
                            'role' => $data['role'],
                            'branch_id' => $record->branch_id,
                            'store_id' => $record->id,
                            'status' => 'active',
                        ]);
                        
                        Notification::make()
                            ->title('직원 계정이 생성되었습니다')
                            ->success()
                            ->body("이메일: {$data['email']}")
                            ->send();
                    }),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->defaultSort('created_at', 'desc');
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListStores::route('/'),
            'create' => Pages\CreateStore::route('/create'),
            'view' => Pages\ViewStore::route('/{record}'),
            'edit' => Pages\EditStore::route('/{record}/edit'),
        ];
    }
    
    public static function getNavigationBadge(): ?string
    {
        return static::getModel()::count();
    }
    
    public static function canAccess(): bool
    {
        return auth()->user()?->isHeadquarters() ?? false;
    }
}