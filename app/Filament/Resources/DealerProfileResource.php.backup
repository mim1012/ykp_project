<?php

namespace App\Filament\Resources;

use App\Filament\Resources\DealerProfileResource\Pages;
use App\Models\DealerProfile;
use Filament\Forms\Components\DateTimePicker;
use Filament\Forms\Components\KeyValue;
use Filament\Forms\Components\Section;
use Filament\Forms\Components\Select;
use Filament\Forms\Components\Textarea;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Components\Toggle;
use Filament\Resources\Resource;
use Filament\Schemas\Schema;
use Filament\Tables\Columns\BadgeColumn;
use Filament\Tables\Columns\TextColumn;
use Filament\Tables\Filters\SelectFilter;

class DealerProfileResource extends Resource
{
    protected static ?string $model = DealerProfile::class;

    protected static string $navigationIcon = 'heroicon-o-building-office';
    
    protected static ?string $navigationLabel = '대리점 프로파일';
    
    protected static ?string $modelLabel = '대리점 프로파일';
    
    protected static ?string $pluralModelLabel = '대리점 프로파일';

    public static function form(): Schema
    {
        return Schema::make([
            Section::make('기본 정보')
                ->schema([
                    TextInput::make('dealer_code')
                        ->label('대리점 코드')
                        ->required()
                        ->unique(ignoreRecord: true)
                        ->maxLength(20),
                    TextInput::make('dealer_name')
                        ->label('대리점명')
                        ->required()
                        ->maxLength(100),
                    TextInput::make('contact_person')
                        ->label('담당자명')
                        ->maxLength(50),
                    TextInput::make('phone')
                        ->label('연락처')
                        ->tel()
                        ->maxLength(20),
                    Textarea::make('address')
                        ->label('주소')
                        ->columnSpanFull(),
                ])->columns(2),

            Section::make('정산 설정')
                ->schema([
                    TextInput::make('default_sim_fee')
                        ->label('기본 SIM 비용')
                        ->numeric()
                        ->default(0),
                    TextInput::make('default_mnp_discount')
                        ->label('기본 MNP 할인')
                        ->numeric()
                        ->default(800),
                    TextInput::make('tax_rate')
                        ->label('세율')
                        ->numeric()
                        ->default(0.133)
                        ->step(0.001),
                    TextInput::make('default_payback_rate')
                        ->label('기본 환급률')
                        ->numeric()
                        ->default(0),
                ])->columns(2),

            Section::make('상태 관리')
                ->schema([
                    Select::make('status')
                        ->label('상태')
                        ->options([
                            'active' => '활성',
                            'inactive' => '비활성',
                            'suspended' => '일시정지'
                        ])
                        ->default('active')
                        ->required(),
                    Toggle::make('auto_calculate_tax')
                        ->label('세금 자동 계산')
                        ->default(true),
                    Toggle::make('include_sim_fee_in_settlement')
                        ->label('정산에 SIM 비용 포함')
                        ->default(true),
                ])->columns(3),
        ]);
    }

    public static function table(): array
    {
        return [
            TextColumn::make('dealer_code')
                ->label('대리점 코드')
                ->searchable()
                ->sortable(),
            TextColumn::make('dealer_name')
                ->label('대리점명')
                ->searchable()
                ->sortable(),
            TextColumn::make('contact_person')
                ->label('담당자')
                ->searchable(),
            TextColumn::make('phone')
                ->label('연락처'),
            BadgeColumn::make('status')
                ->label('상태')
                ->colors([
                    'success' => 'active',
                    'danger' => 'inactive',
                    'warning' => 'suspended',
                ])
                ->formatStateUsing(fn ($state) => match($state) {
                    'active' => '활성',
                    'inactive' => '비활성',
                    'suspended' => '일시정지',
                    default => $state
                }),
            TextColumn::make('created_at')
                ->label('생성일')
                ->dateTime('Y-m-d H:i')
                ->sortable(),
        ];
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListDealerProfiles::route('/'),
            'create' => Pages\CreateDealerProfile::route('/create'),
            'view' => Pages\ViewDealerProfile::route('/{record}'),
            'edit' => Pages\EditDealerProfile::route('/{record}/edit'),
        ];
    }
}