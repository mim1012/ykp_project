# Ultra-simple Apache + PHP for Railway
FROM php:8.3-apache

# Cache bust to force rebuild (update this value to force rebuild)
ARG CACHE_BUST=2024-12-20-v4-filament-fix

WORKDIR /var/www/html

# Install system dependencies including curl for testing
RUN apt-get update && apt-get install -y \
    libpq-dev \
    libzip-dev \
    libicu-dev \
    unzip \
    git \
    curl \
    net-tools \
    && docker-php-ext-install pdo pdo_pgsql zip intl opcache \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Enable Apache modules
RUN a2enmod rewrite headers

# Remove default site
RUN a2dissite 000-default

# Copy custom VirtualHost configuration (without any sed replacements)
COPY apache-vhost.conf /etc/apache2/sites-available/001-app.conf
RUN a2ensite 001-app

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy application
COPY . .

# Create health check files directly
RUN echo "OK" > /var/www/html/public/health.txt \
    && echo '<?php http_response_code(200); echo "OK";' > /var/www/html/public/health.php

# Install dependencies (without --no-dev to avoid Filament autoload issues)
RUN composer install --optimize-autoloader --no-scripts --ignore-platform-reqs \
    && sed -i '/use Test/d' vendor/nesbot/carbon/src/Carbon/Traits/Date.php 2>/dev/null || true \
    && find vendor/filament -name "helpers.php" -type f | head -5

# Fix permissions
RUN mkdir -p storage/app/public storage/framework/cache storage/framework/sessions storage/framework/views storage/logs bootstrap/cache \
    && chown -R www-data:www-data storage bootstrap/cache \
    && chmod -R 775 storage bootstrap/cache

# Create .env
RUN cp .env.example .env 2>/dev/null || echo "APP_KEY=" > .env

# NO sed replacements - we'll use explicit paths in vhost

# Don't set ports here - will be set by startup script based on PORT env

# Set ServerName to avoid warnings
RUN echo "ServerName localhost" >> /etc/apache2/apache2.conf

# EXPOSE is informational only - actual port comes from PORT env
EXPOSE 80 8080

# Copy and run startup script
COPY startup.sh /usr/local/bin/startup.sh
RUN chmod +x /usr/local/bin/startup.sh

# Start Apache via startup script
CMD ["/usr/local/bin/startup.sh"]