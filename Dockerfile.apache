# Simple Apache + PHP for Railway
FROM php:8.3-apache

# Cache bust to force rebuild (update this value to force rebuild)
ARG CACHE_BUST=2024-12-20-v2

WORKDIR /var/www/html

# Laravel public을 아파치 루트로
ENV APACHE_DOCUMENT_ROOT=/var/www/html/public

# Install system dependencies and PHP extensions
RUN apt-get update && apt-get install -y \
    libpq-dev \
    libzip-dev \
    libicu-dev \
    unzip \
    git \
    curl \
    && docker-php-ext-install pdo pdo_pgsql zip intl opcache \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Enable Apache modules
RUN a2enmod rewrite headers

# Configure Apache - ports will be set by startup script
RUN a2dissite 000-default

# Copy custom VirtualHost configuration
COPY apache-vhost.conf /etc/apache2/sites-available/001-app.conf
RUN a2ensite 001-app

# Install Composer
COPY --from=composer:latest /usr/bin/composer /usr/bin/composer

# Copy application
COPY . .

# Install dependencies without dev packages
RUN composer install --no-dev --optimize-autoloader --no-scripts --ignore-platform-reqs \
    && sed -i '/use Test/d' vendor/nesbot/carbon/src/Carbon/Traits/Date.php 2>/dev/null || true

# Fix permissions (create directories if they don't exist)
RUN mkdir -p storage/app/public storage/framework/cache storage/framework/sessions storage/framework/views storage/logs bootstrap/cache \
    && chown -R www-data:www-data storage bootstrap/cache \
    && chmod -R 775 storage bootstrap/cache

# Create .env
RUN cp .env.example .env 2>/dev/null || echo "APP_KEY=" > .env

# Create simple test file
RUN echo '<?php echo "Apache + PHP Working! " . PHP_VERSION;' > public/apache-test.php

# Apply document root to Apache configs (ENV already set above)
RUN sed -ri -e 's!/var/www/html!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/sites-available/*.conf \
    && sed -ri -e 's!/var/www/!${APACHE_DOCUMENT_ROOT}!g' /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

EXPOSE 80

# Copy and run startup script
COPY startup.sh /usr/local/bin/startup.sh
RUN chmod +x /usr/local/bin/startup.sh

# Ensure Apache ServerName is set
RUN echo "ServerName localhost" >> /etc/apache2/apache2.conf

# Verify sites are properly enabled
RUN a2ensite 001-app && a2dissite 000-default || true

# Start Apache via startup script
CMD ["/usr/local/bin/startup.sh"]